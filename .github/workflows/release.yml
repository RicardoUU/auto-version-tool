name: Auto Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (true/false)'
        required: false
        default: 'false'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --silent

      - name: Build
        run: npm run build

      - name: Auto bump & changelog
        id: bump
        env:
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          DRY=${{ github.event.inputs.dry_run }}
          if [ "$DRY" = "true" ]; then
            echo "Dry run mode - executing preview"
            node dist/cli.js bump -y -d --skip-commit --skip-tag || true
            echo "dry_run=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          # 确保使用最新的 main 分支
          git checkout main
          git pull --ff-only
          # 运行自动版本更新 (含提交和标签)
          node dist/cli.js bump -y --push || true
          # 提取新版本号
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Push tags (if not dry run)
        if: steps.bump.outputs.dry_run != 'true'
        run: |
          git push --follow-tags origin main

      - name: Publish to npm
        if: steps.bump.outputs.dry_run != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Publishing version $VERSION"
          npm publish --access public

      - name: Create GitHub Release
        if: steps.bump.outputs.dry_run != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          name: v${{ steps.bump.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
